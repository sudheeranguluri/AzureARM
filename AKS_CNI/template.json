{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of agent nodes for the cluster."
            },
            "minValue": 1,
            "maxValue": 100
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "allowedValues": [
                "Basic_A0","Basic_A1","Basic_A2","Basic_A3","Basic_A4","Standard_A0","Standard_A1","Standard_A2","Standard_A3","Standard_A4","Standard_A5","Standard_A6","Standard_A7","Standard_A8","Standard_A9","Standard_A10","Standard_A11","Standard_A1_v2","Standard_A2_v2","Standard_A4_v2","Standard_A8_v2","Standard_A2m_v2","Standard_A4m_v2","Standard_A8m_v2","Standard_B1s","Standard_B1ms","Standard_B2s","Standard_B2ms","Standard_B4ms","Standard_B8ms","Standard_D1","Standard_D2","Standard_D3","Standard_D4","Standard_D11","Standard_D12","Standard_D13","Standard_D14","Standard_D1_v2","Standard_D2_v2","Standard_D3_v2","Standard_D4_v2","Standard_D5_v2","Standard_D2_v3","Standard_D4_v3","Standard_D8_v3","Standard_D16_v3","Standard_D32_v3","Standard_D64_v3","Standard_D2s_v3","Standard_D4s_v3","Standard_D8s_v3","Standard_D16s_v3","Standard_D32s_v3","Standard_D64s_v3","Standard_D11_v2","Standard_D12_v2","Standard_D13_v2","Standard_D14_v2","Standard_D15_v2","Standard_DS1","Standard_DS2","Standard_DS3","Standard_DS4","Standard_DS11","Standard_DS12","Standard_DS13","Standard_DS14","Standard_DS1_v2","Standard_DS2_v2","Standard_DS3_v2","Standard_DS4_v2","Standard_DS5_v2","Standard_DS11_v2","Standard_DS12_v2","Standard_DS13_v2","Standard_DS14_v2","Standard_DS15_v2","Standard_DS13-4_v2","Standard_DS13-2_v2","Standard_DS14-8_v2","Standard_DS14-4_v2","Standard_E2_v3","Standard_E4_v3","Standard_E8_v3","Standard_E16_v3","Standard_E32_v3","Standard_E64_v3","Standard_E2s_v3","Standard_E4s_v3","Standard_E8s_v3","Standard_E16s_v3","Standard_E32s_v3","Standard_E64s_v3","Standard_E32-16_v3","Standard_E32-8s_v3","Standard_E64-32s_v3","Standard_E64-16s_v3","Standard_F1","Standard_F2","Standard_F4","Standard_F8","Standard_F16","Standard_F1s","Standard_F2s","Standard_F4s","Standard_F8s","Standard_F16s","Standard_F2s_v2","Standard_F4s_v2","Standard_F8s_v2","Standard_F16s_v2","Standard_F32s_v2","Standard_F64s_v2","Standard_F72s_v2","Standard_G1","Standard_G2","Standard_G3","Standard_G4","Standard_G5","Standard_GS1","Standard_GS2","Standard_GS3","Standard_GS4","Standard_GS5","Standard_GS4-8","Standard_GS4-4","Standard_GS5-16","Standard_GS5-8","Standard_H8","Standard_H16","Standard_H8m","Standard_H16m","Standard_H16r","Standard_H16mr","Standard_L4s","Standard_L8s","Standard_L16s","Standard_L32s","Standard_M64s","Standard_M64ms","Standard_M128s","Standard_M128ms","Standard_M64-32ms","Standard_M64-16ms","Standard_M128-64ms","Standard_M128-32ms","Standard_NC6","Standard_NC12","Standard_NC24","Standard_NC24r","Standard_NC6s_v2","Standard_NC12s_v2","Standard_NC24s_v2","Standard_NC24rs_v2","Standard_NC6s_v3","Standard_NC12s_v3","Standard_NC24s_v3","Standard_NC24rs_v3","Standard_ND6s","Standard_ND12s","Standard_ND24s","Standard_ND24rs","Standard_NV6","Standard_NV12","Standard_NV24"
            ],
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "servicePrincipalClientId": {
            "metadata": {
                "description": "Client ID used by Azure"
            },
            "type": "securestring",
            "minLength": 1
        },
        "servicePrincipalClientSecret": {
            "metadata": {
                "description": "The Service Principal Client Secret."
            },
            "type": "securestring",
            "minLength": 1
        },
        "osType": {
            "type": "string",
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.7.7",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "networkPlugin": {
            "type": "string",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off of RBAC."
            }
        },
        "enablePrivateCluster": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable private network access to the Kubernetes cluster."
            }
        },
        "enableHttpApplicationRouting": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off of http application routing."
            }
        },
        "enableOmsAgent": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off of omsagent addon."
            }
        },
        "omsWorkspaceResourceGroupName":{
            "type": "string",
            "metadata": {
                "description": "Resource group name of log analytics workspace"
            }
        },
        "omsWorkspaceRegion": {
            "type": "string",
            "defaultValue": "East US",
            "metadata": {
                "description": "Specify the region for your OMS workspace."
            }
        },
        "omsWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "OMS Workspace Name"
            }
        },
        "vnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Resource group name of virtual network"
            },
            "minLength": 1
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network Name"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "subnet name in virtual network"
            }
        },
        "serviceCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
            }
        },
        "dnsServiceIP": {
            "type": "string",
            "metadata": {
                "description": "Containers DNS server IP address."
            }
        },
        "dockerBridgeCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
            }
        },
        "nodeResourceGroupName":{
            "type": "string",
            "metadata": {
                "description": "Name of the node resource group"
            }
        },
		"tags": {
            "type": "object"
        }
    },
    "resources": [
        {
            "apiVersion": "2020-03-01",
            "dependsOn": [],
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('resourceName')]",
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "nodeResourceGroup": "[parameters('nodeResourceGroupName')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "mode": "System",
                        "type": "VirtualMachineScaleSets",
                        "vnetSubnetID": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/', parameters('vnetResourceGroupName') ,'/providers/Microsoft.Network/virtualNetworks/', parameters('vnetName') ,'/subnets/', parameters('subnetName'))]"
                    }
                ],
                "servicePrincipalProfile": {
                    "ClientId": "[parameters('servicePrincipalClientId')]",
                    "Secret": "[parameters('servicePrincipalClientSecret')]"
                },
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "[parameters('networkPlugin')]",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    },
                    "omsagent": {
                        "enabled": "[parameters('enableOmsAgent')]",
                        "config": {
                            "logAnalyticsWorkspaceResourceID": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/', parameters('omsWorkspaceResourceGroupName') ,'/providers/microsoft.operationalinsights/workspaces/', parameters('omsWorkspaceName'))]"
                        }
                    }
                }
            },
            "tags": "[parameters('tags')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SolutionDeployment-20200417124757",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('omsWorkspaceResourceGroupName')]",
            "subscriptionId": "[subscription().subscriptionId]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "apiVersion": "2015-11-01-preview",
                            "type": "Microsoft.OperationsManagement/solutions",
                            "location": "[parameters('omsWorkspaceRegion')]",
                            "name": "[concat('ContainerInsights', '(', parameters('omsWorkspaceName'), ')')]",
                            "properties": {
                                "workspaceResourceId": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/', parameters('omsWorkspaceResourceGroupName') ,'/providers/microsoft.operationalinsights/workspaces/', parameters('omsWorkspaceName'))]"
                            },
                            "plan": {
                                "name": "[concat('ContainerInsights', '(', parameters('omsWorkspaceName'), ')')]",
                                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                                "promotionCode": "",
                                "publisher": "Microsoft"
                            }
                        }
                    ]
                }
            },
            "dependsOn": []
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))).fqdn]"
        }
    }
}